#include "plugin.h"
#include "ClassicHud.h"
#include "CFontNew.h"
#include "CHudNew.h"
#include "Settings.h"

#if GTASA
#include "CTxdStore.h"
#endif

using namespace plugin;

CFontNew cfontnew;
bool CFontNew::ms_bFontsLoaded;

int III_Size[2][16 * 13] = {
	{ // font2
	13, 12, 31, 35, 23, 35, 31,  9, 14, 15, 25, 30, 11, 17, 13, 31,
	23, 16, 22, 21, 24, 23, 23, 20, 23, 22, 10, 35, 26, 26, 26, 26,
	30, 26, 24, 23, 24, 22, 21, 24, 26, 10, 20, 26, 22, 29, 26, 25,
	23, 25, 24, 24, 22, 25, 24, 29, 29, 23, 25, 37, 22, 37, 35, 37,
	35, 21, 22, 21, 21, 22, 13, 22, 21, 10, 16, 22, 11, 32, 21, 21,
	23, 22, 16, 20, 14, 21, 20, 30, 25, 21, 21, 33, 33, 33, 33, 35,
	27, 27, 27, 27, 32, 24, 23, 23, 23, 23, 11, 11, 11, 11, 26, 26,
	26, 26, 26, 26, 26, 25, 26, 21, 21, 21, 21, 32, 23, 22, 22, 22,
	22, 11, 11, 11, 11, 22, 22, 22, 22, 22, 22, 22, 22, 26, 21, 24,
	12, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 18, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	20,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	},
	
	{ // font1
	15, 14, 16, 25, 19, 26, 22, 11, 18, 18, 27, 26, 13, 19,  9, 27,
	19, 18, 19, 19, 22, 19, 20, 18, 19, 20, 12, 32, 15, 32, 15, 35,
	15, 19, 19, 19, 19, 19, 16, 19, 20,  9, 19, 20, 14, 29, 19, 20,
	19, 19, 19, 19, 21, 19, 20, 32, 20, 19, 19, 33, 31, 39, 37, 39,
	37, 21, 21, 21, 23, 21, 19, 23, 23, 10, 19, 20, 16, 26, 23, 23,
	20, 20, 20, 22, 21, 22, 22, 26, 22, 22, 23, 35, 35, 35, 35, 37,
	19, 19, 19, 19, 29, 19, 19, 19, 19, 19,  9,  9,  9,  9, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 30, 19, 19, 19, 19,
	19, 10, 10, 10, 10, 19, 19, 19, 19, 19, 19, 19, 19, 19, 23, 35,
	12, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 11, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	}
};

int VC_Size[2][16 * 13] = {
	{ // font2
	12, 13, 13, 28, 28, 28, 28,  8, 17, 17, 30, 28, 28, 12,  9, 21,
	16,  8, 16, 14, 14, 14, 14, 14, 14, 14, 13, 13, 30, 30, 30, 30,
	10, 16, 18, 12, 16, 18, 16, 16, 20, 12, 18, 20, 18, 28, 24, 24,
	18, 18, 18, 18, 16, 18, 16, 22, 22, 22, 20, 24, 28, 28, 14, 24,
	10, 11, 10,  9, 11,  8, 10, 12, 12,  7,  7, 13,  5, 18, 12, 12,
	16, 11, 10,  8,  8, 13, 13, 18, 17, 13, 12, 30, 30, 37, 35, 37,
	24, 25, 25, 25, 33, 21, 24, 24, 24, 24, 17, 17, 17, 17, 27, 27,
	26, 26, 31, 31, 31, 31, 11, 11, 11, 11, 11, 20,  9, 10, 10, 10,
	10,  7,  7,  7,  7, 10, 10, 10, 10, 13, 13, 13, 13, 27, 12, 30,
	27, 16, 27, 27, 27, 27, 27, 27, 27, 27, 18, 29, 26, 25, 28, 26,
	25, 27, 28, 12, 24, 25, 24, 30, 27, 29, 26, 26, 25, 26, 25, 26,
	28, 32, 27, 26, 26, 29, 29, 29, 29, 33, 25, 26, 26, 26, 26, 14,
	14, 14, 14, 29, 29, 29, 29, 26, 26, 26, 26, 21, 25, 30, 27, 27,
	},

	{ // font1
	15,  9, 17, 27, 20, 34, 23, 12, 12, 12, 21, 20, 12, 14, 12, 15,
	23, 15, 21, 21, 21, 21, 21, 21, 20, 21, 12, 12, 24, 24, 24, 19,
	10, 22, 21, 21, 22, 18, 19, 24, 22,  9, 16, 21, 16, 28, 24, 23,
	22, 23, 22, 20, 18, 23, 23, 31, 23, 19, 21, 21, 13, 35, 11, 21,
	10, 17, 19, 15, 18, 17, 12, 19, 17,  6,  9, 19,  7, 26, 17, 17,
	17, 17, 10, 16, 11, 17, 18, 24, 20, 18, 16, 21, 17, 20, 15, 15,
	22, 22, 22, 22, 29, 19, 16, 16, 16, 16, 11, 11, 11, 11, 27, 27,
	27, 27, 23, 23, 23, 23, 20, 19, 19, 19, 19, 30, 14, 19, 19, 19,
	19,  9,  9,  9,  9, 21, 21, 21, 21, 18, 18, 18, 18, 24, 19, 19,
	20, 18, 19, 19, 21, 19, 19, 19, 19, 19, 16, 19, 19, 19, 20, 19,
	16, 19, 19,  9, 19, 20, 14, 29, 19, 19, 19, 19, 19, 19, 21, 19,
	20, 32, 21, 19, 19, 19, 19, 19, 19, 29, 19, 19, 19, 19, 19,  9,
	 9,  9,  9, 19, 19, 19, 19, 19, 19, 19, 19, 19, 21, 19, 10, 20,
	}
};

int SA_Size[2][16 * 13] = {
	{ // font2
	12, 13, 13, 28, 28, 28, 28,  8, 17, 17, 30, 28, 28, 12,  9, 21,
	28, 14, 28, 28, 28, 28, 28, 28, 28, 28, 13, 13, 30, 30, 30, 30,
	10, 25, 23, 21, 24, 22, 20, 24, 24, 17, 20, 22, 20, 30, 27, 27,
	26, 26, 24, 23, 24, 31, 23, 31, 24, 23, 21, 28, 33, 33, 14, 28,
	10, 11, 12,  9, 11, 10, 10, 12, 12,  7,  7, 13,  5, 18, 12, 10,
	12, 11, 10, 12,  8, 13, 13, 18, 17, 13, 12, 30, 30, 37, 35, 37,
	25, 25, 25, 25, 33, 21, 24, 24, 24, 24, 17, 17, 17, 17, 27, 27,
	27, 27, 31, 31, 31, 31, 11, 11, 11, 11, 11, 20,  9, 10, 10, 10,
	10,  7,  7,  7,  7, 10, 10, 10, 10, 13, 13, 13, 13, 27, 12, 30,
	27, 16, 27, 27, 27, 27, 27, 27, 27, 27, 18, 29, 26, 25, 28, 26,
	25, 27, 28, 12, 24, 25, 24, 30, 27, 29, 26, 26, 25, 26, 25, 26,
	28, 32, 27, 26, 26, 29, 29, 29, 29, 33, 25, 26, 26, 26, 26, 14,
	14, 14, 14, 29, 29, 29, 29, 26, 26, 26, 26, 21, 25, 30, 27, 27,
	},

	{ // font1
	15,  9, 17, 27, 20, 34, 23, 12, 12, 12, 21, 20, 12, 14, 12, 15,
	23, 15, 21, 21, 21, 21, 21, 21, 20, 21, 12, 12, 24, 24, 24, 19,
	10, 22, 19, 19, 22, 16, 19, 24, 22, 11, 16, 21, 15, 28, 24, 27,
	20, 25, 19, 19, 18, 23, 23, 31, 23, 19, 21, 21, 13, 35, 11, 21,
	10, 19, 20, 14, 20, 19, 13, 20, 19,  9,  9, 19,  9, 29, 19, 21,
	19, 19, 15, 15, 14, 18, 19, 27, 20, 20, 17, 21, 17, 20, 15, 15,
	22, 22, 22, 22, 29, 19, 16, 16, 16, 16, 11, 11, 11, 11, 27, 27,
	27, 27, 23, 23, 23, 23, 20, 19, 19, 19, 19, 30, 14, 19, 19, 19,
	19,  9,  9,  9,  9, 21, 21, 21, 21, 18, 18, 18, 18, 24, 19, 19,
	20, 18, 19, 19, 21, 19, 19, 19, 19, 19, 16, 19, 19, 19, 20, 19,
	16, 19, 19,  9, 19, 20, 14, 29, 19, 19, 19, 19, 19, 19, 21, 19,
	20, 32, 21, 19, 19, 19, 19, 19, 19, 29, 19, 19, 19, 19, 19,  9,
	 9,  9,  9, 19, 19, 19, 19, 19, 19, 19, 19, 19, 21, 19, 10,  9,
	}
};

int LCS_Size[2][16 * 13] = {
	{ // font2
	10,  8, 15, 21, 24, 27, 28,  8, 11, 11, 16, 18, 10, 12,  8, 26,
	24, 16, 21, 22, 23, 21, 21, 20, 22, 22,  8,  8, 20, 19, 20, 19,
	30, 26, 22, 24, 24, 19, 19, 24, 24,  8, 20, 24, 18, 28, 25, 24,
	23, 27, 23, 23, 22, 23, 25, 32, 26, 25, 22, 10, 16, 10,  8, 13,
	30, 26, 22, 24, 24, 19, 19, 24, 24,  8, 20, 24, 18, 28, 25, 24,
	23, 27, 23, 23, 22, 23, 25, 29, 26, 25, 22, 10, 16, 10,  8, 13,
	26, 26, 26, 26, 30, 23, 20, 20, 20, 20, 10, 10, 14, 12, 24, 24,
	24, 24, 23, 23, 23, 23, 19, 19, 19, 19, 19, 28, 19, 19, 19, 19,
	19, 10, 10, 14, 13, 19, 19, 19, 19, 18, 18, 18, 18, 26, 18, 19,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 10, 20, 20, 20, 20, 20,
	18, 20, 20, 10, 20, 21, 18, 30, 20, 20, 20, 20, 20, 20, 22, 20,
	22, 33, 20, 20, 20, 20, 20, 30, 20, 29, 10, 20, 20, 20, 20, 10,
	10, 10, 10, 20, 20, 20, 20, 20, 20, 20, 20, 21, 20, 20, 10, 10,
	},

	{ // font1
	12,  8, 14, 22, 22, 28, 24,  8, 10, 10, 21, 20,  8, 10,  8, 22,
	22, 16, 20, 20, 22, 20, 20, 18, 20, 20,  8,  8, 20, 20, 20, 18,
	12, 24, 20, 22, 22, 18, 18, 22, 22,  8, 18, 22, 18, 28, 24, 22,
	20, 24, 20, 20, 20, 22, 24, 36, 24, 24, 20, 10, 22, 10,  8, 12,
	10, 18, 18, 18, 18, 18, 14, 18, 16,  8, 10, 18,  8, 26, 16, 18,
	18, 18, 16, 18, 16, 16, 18, 26, 18, 18, 16, 12, 14, 26, 26, 28,
	24, 18, 18, 18, 22, 18, 24, 22, 20, 20, 20, 18, 12, 16, 18, 18,
	16, 16, 24, 18, 10, 22, 22, 18, 18, 10, 18, 16, 24, 22, 18, 18,
	24, 22, 18, 10, 12, 12, 12, 12, 12, 18, 16, 18, 10, 24, 16, 18,
	20, 18, 19, 19, 21, 19, 19, 19, 19, 19, 16, 19, 19, 19, 20, 19,
	16, 19, 19,  9, 19, 20, 14, 29, 19, 19, 19, 19, 19, 19, 21, 19,
	20, 32, 21, 19, 19, 19, 19, 19, 19, 29, 19, 19, 19, 19, 19,  9,
	 9,  9,  9, 19, 19, 19, 19, 19, 19, 19, 19, 19, 21, 19, 10,  9,
	}
};

int VCS_Size[2][16 * 13] = {
	{ // font2
	12, 13, 13, 28, 28, 28, 28,  8, 17, 17, 30, 28, 28, 12,  9, 21,
	16,  8, 16, 14, 14, 14, 14, 14, 14, 14, 13, 13, 30, 30, 30, 30,
	10, 16, 18, 12, 16, 18, 16, 16, 20, 12, 18, 20, 18, 28, 24, 24,
	18, 18, 18, 18, 16, 18, 16, 22, 22, 22, 20, 24, 28, 28, 14, 24,
	10, 11, 10,  9, 11,  8, 10, 12, 12,  7,  7, 13,  5, 18, 12, 12,
	16, 11, 10,  8,  8, 13, 13, 18, 17, 13, 12, 30, 30, 37, 35, 37,
	24, 25, 25, 25, 33, 21, 24, 24, 24, 24, 17, 17, 17, 17, 27, 27,
	26, 26, 31, 31, 31, 31, 11, 11, 11, 11, 11, 20,  9, 10, 10, 10,
	10,  7,  7,  7,  7, 10, 10, 10, 10, 13, 13, 13, 13, 27, 12, 30,
	27, 16, 27, 27, 27, 27, 27, 27, 27, 27, 18, 29, 26, 25, 28, 26,
	25, 27, 28, 12, 24, 25, 24, 30, 27, 29, 26, 26, 25, 26, 25, 26,
	28, 32, 27, 26, 26, 29, 29, 29, 29, 33, 25, 26, 26, 26, 26, 14,
	14, 14, 14, 29, 29, 29, 29, 26, 26, 26, 26, 21, 25, 30, 27, 27,
	},

	{ // font1
	12,  8, 14, 22, 22, 28, 24,  8, 10, 10, 21, 20,  8, 10,  8, 22,
	22, 16, 20, 20, 22, 20, 20, 18, 20, 20,  8,  8, 20, 20, 20, 18,
	12, 24, 20, 22, 22, 18, 18, 22, 22,  8, 18, 22, 18, 28, 24, 22,
	20, 24, 20, 20, 20, 22, 24, 36, 24, 24, 20, 10, 22, 10,  8, 12,
	10, 18, 18, 18, 18, 18, 14, 18, 16,  8, 10, 18,  8, 26, 16, 18,
	18, 18, 16, 18, 16, 16, 18, 26, 18, 18, 16, 12, 14, 26, 26, 28,
	24, 18, 18, 18, 22, 18, 24, 22, 20, 20, 20, 18, 12, 16, 18, 18,
	16, 16, 24, 18, 10, 22, 22, 18, 18, 10, 18, 16, 24, 22, 18, 18,
	24, 22, 18, 10, 12, 12, 12, 12, 12, 18, 16, 18, 10, 24, 16, 18,
	20, 18, 19, 19, 21, 19, 19, 19, 19, 19, 16, 19, 19, 19, 20, 19,
	16, 19, 19,  9, 19, 20, 14, 29, 19, 19, 19, 19, 19, 19, 21, 19,
	20, 32, 21, 19, 19, 19, 19, 19, 19, 29, 19, 19, 19, 19, 19,  9,
	 9,  9,  9, 19, 19, 19, 19, 19, 19, 19, 19, 19, 21, 19, 10,  9,
	}
};

int IV_Size[2][16 * 13] = {
	{ // font2
	12, 13, 13, 28, 16, 28, 16,  8, 17, 17, 30, 28, 28,  8,  9, 21,
	28, 14, 28, 28, 28,  0, 28, 28, 28, 28, 13, 13, 30, 30, 30, 30,
	10, 26, 24, 22, 25, 23, 21, 25, 25, 18, 21, 23, 21, 31, 28, 28,
	27, 27, 25, 24, 25, 32, 24, 32, 25, 24, 22, 28, 33, 33, 14, 28,
	10, 12, 13, 10, 12, 11, 11, 13, 13,  8,  8, 14,  6, 19, 13, 11,
	13, 12, 11, 13,  9, 14, 14, 19, 18, 14, 13, 30, 30, 37, 35, 37,
	26, 26, 26, 26, 34, 22, 25, 25, 25, 25, 18, 18, 18, 18, 28, 28,
	28, 28, 32, 32, 32, 32, 12, 12, 12, 12, 12, 21, 10, 11, 11, 11,
	11,  8,  8,  8,  8, 11, 11, 11, 11, 14, 14, 14, 14, 28, 13, 30,
	13, 11, 13, 13, 13, 13, 13, 13, 13, 13, 13, 11, 11, 13, 13, 11,
	13, 13, 15,  8, 15, 15, 12, 16, 13, 12, 13, 13, 13, 13, 11, 15,
	13, 15, 13, 13, 10, 15, 15, 15, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	},

	{ // font1
	10,  8, 10, 16, 15, 24, 19, 12,  9,  9, 21, 15,  6, 11,  6,  9,
	18, 10, 16, 17, 16, 16, 17, 15, 16, 17,  7,  7, 13, 14, 13, 15,
	10, 18, 19, 21, 20, 18, 17, 23, 21,  8, 16, 19, 16, 24, 21, 22,
	18, 23, 20, 18, 16, 20, 18, 26, 17, 17, 17,  9,  9,  9,  8, 20,
	 5, 16, 18, 16, 18, 17,  9, 18, 17,  7,  7, 16,  7, 26, 17, 17,
	18, 18, 10, 15,  9, 17, 14, 21, 14, 15, 14, 19, 11, 19, 13, 13,
	18, 18, 18, 18, 28, 21, 18, 18, 18, 18,  8,  8,  8,  8, 22, 22,
	22, 22, 20, 20, 20, 20, 18, 16, 16, 16, 16, 28, 16, 17, 17, 17,
	17,  7,  7,  7,  7, 17, 17, 17, 17, 17, 17, 17, 17, 21, 17, 15,
	19, 19, 19, 19, 21, 19, 19, 19, 19, 19, 10, 19, 19, 19, 19, 19,
	16, 19, 19, 10, 19, 19, 15, 29, 19, 19, 19, 19, 19, 19, 21, 19,
	20, 32, 19, 19, 19, 19, 19, 19, 19, 29, 19, 19, 19, 19, 19, 10,
	10,  9,  9, 19, 19, 19, 19, 19, 19, 19, 19, 20, 19, 19, 10, 10,
	}
};

CFontNew::CFontNew() {
	s.readIni();

	if (!s.m_bEnable)
		return;

#if GTASA
	patch::RedirectJump(0x719490, CFontNew::SetFontStyle);
#endif
}

void CFontNew::Initialise() {
	if (!ms_bFontsLoaded) {
		int Slot = CTxdStore::AddTxdSlot("fonts_new");
		CTxdStore::LoadTxd(Slot, PLUGIN_PATH(s.SetFileWithPrefix("classichud\\fonts\\", "fonts.txd")));
		CTxdStore::AddRef(Slot);
		CTxdStore::PopCurrentTxd();
		CTxdStore::SetCurrentTxd(Slot);

		CFont::Sprite[0].SetTexture("font2");
		CFont::Sprite[1].SetTexture("font1");

		CTxdStore::PopCurrentTxd();

		for (int i = 0; i < 208; i++) {
			if (ClassicHud::GetGameMode() == GAMEMODE_III) {
#if GTASA
				gFontData[0].m_propValues[i] = III_Size[0][i];
				gFontData[1].m_propValues[i] = III_Size[1][i];
				gFontData[0].m_unpropValue = III_Size[1][192];
				gFontData[1].m_unpropValue = III_Size[1][192];
#endif
			}
			else if (ClassicHud::GetGameMode() == GAMEMODE_VC) {
#if GTASA
				gFontData[0].m_propValues[i] = VC_Size[0][i];
				gFontData[1].m_propValues[i] = VC_Size[1][i];
				gFontData[0].m_unpropValue = VC_Size[1][207];
				gFontData[1].m_unpropValue = VC_Size[1][207];
#endif
			}
			else if (ClassicHud::GetGameMode() == GAMEMODE_SA) {
#if GTASA
				gFontData[0].m_propValues[i] = SA_Size[0][i];
				gFontData[1].m_propValues[i] = SA_Size[1][i];
				gFontData[0].m_unpropValue = 27;
				gFontData[1].m_unpropValue = 20;
#endif
			}
			else if (ClassicHud::GetGameMode() == GAMEMODE_LCS) {
#if GTASA
				gFontData[0].m_propValues[i] = LCS_Size[0][i];
				gFontData[1].m_propValues[i] = LCS_Size[1][i];
				gFontData[0].m_unpropValue = 23;
				gFontData[1].m_unpropValue = 25;
#endif
			}
			else if (ClassicHud::GetGameMode() == GAMEMODE_VCS) {
#if GTASA
				gFontData[0].m_propValues[i] = VCS_Size[0][i];
				gFontData[1].m_propValues[i] = VCS_Size[1][i];
				gFontData[0].m_unpropValue = 20;
				gFontData[1].m_unpropValue = 20;
#endif
			}
			else if (ClassicHud::GetGameMode() == GAMEMODE_UG) {
#if GTASA
				gFontData[0].m_propValues[i] = SA_Size[0][i];
				gFontData[1].m_propValues[i] = SA_Size[1][i];
				gFontData[0].m_unpropValue = 20;
				gFontData[1].m_unpropValue = 20;
#endif
			}
			else if (ClassicHud::GetGameMode() == GAMEMODE_IV) {
#if GTASA
				gFontData[0].m_propValues[i] = IV_Size[0][i];
				gFontData[1].m_propValues[i] = IV_Size[1][i];
				gFontData[0].m_unpropValue = 27;
				gFontData[1].m_unpropValue = 20;
#endif
			}
		}

		ms_bFontsLoaded = true;
	}
}

void CFontNew::Shutdown() {
	if (ms_bFontsLoaded) {
		for (int i = 0; i < 2; ++i)
			CFont::Sprite[i].Delete();

		int Slot = CTxdStore::FindTxdSlot("fonts_new");
		CTxdStore::RemoveTxdSlot(Slot);

		ms_bFontsLoaded = false;
	}
}

void CFontNew::SetFontStyle(int Font) {
#if GTASA
	if (ClassicHud::GetGameMode() == GAMEMODE_III) {
		if (Font > III_FONT_PRICEDOWN)
			Font = III_FONT_PRICEDOWN;

		CFont::m_FontTextureId = Font;
		CFont::m_FontStyle = 0;
	}
	else if (ClassicHud::GetGameMode() == GAMEMODE_VC) {
		if (Font >= VC_FONT_PRICEDOWN) {
			CFont::m_FontTextureId = 1;
			CFont::m_FontStyle = 1;
		}
		else {
			CFont::m_FontTextureId = Font;
			CFont::m_FontStyle = 0;
		}
	}
	else if (ClassicHud::GetGameMode() == GAMEMODE_SA) {
		if (Font == 2) {
			CFont::m_FontTextureId = 0;
			CFont::m_FontStyle = 2;
		}
		else if (Font == 3) {
			CFont::m_FontTextureId = 1;
			CFont::m_FontStyle = 1;
		}
		else {
			CFont::m_FontTextureId = Font;
			CFont::m_FontStyle = 0;
		}
	}
	else if (ClassicHud::GetGameMode() == GAMEMODE_LCS) {
		if (Font >= LCS_FONT_PRICEDOWN) {
			CFont::m_FontTextureId = 1;
			CFont::m_FontStyle = 1;
		}
		else {
			CFont::m_FontTextureId = Font;
			CFont::m_FontStyle = 0;
		}
	}
	else if (ClassicHud::GetGameMode() == GAMEMODE_VCS) {
		if (Font >= VCS_FONT_PRICEDOWN) {
			CFont::m_FontTextureId = 1;
			CFont::m_FontStyle = 1;
		}
		else {
			CFont::m_FontTextureId = Font;
			CFont::m_FontStyle = 0;
		}
	}
	else if (ClassicHud::GetGameMode() == GAMEMODE_IV) {
		if (Font == 2) {
			CFont::m_FontTextureId = 0;
			CFont::m_FontStyle = 2;
		}
		else if (Font == 3) {
			CFont::m_FontTextureId = 1;
			CFont::m_FontStyle = 1;
		}
		else {
			CFont::m_FontTextureId = Font;
			CFont::m_FontStyle = 0;
		}
	}
	else if (ClassicHud::GetGameMode() == GAMEMODE_UG) {
		if (Font == 2) {
			CFont::m_FontTextureId = 0;
			CFont::m_FontStyle = 2;
		}
		else if (Font == 3) {
			CFont::m_FontTextureId = 1;
			CFont::m_FontStyle = 1;
		}
		else {
			CFont::m_FontTextureId = Font;
			CFont::m_FontStyle = 0;
		}
	}
#endif
}